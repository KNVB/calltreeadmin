{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/modules/login/auth-guard.service.ts","./src/app/modules/login/login-obj.ts","./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/modules/login/login.module.ts","./src/app/modules/utility/auth-token.interceptor.ts","./src/app/modules/utility/services/authentication.service.ts","./src/app/modules/utility/services/call-tree-entry.service.ts","./src/app/modules/utility/utility.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './modules/login/auth-guard.service';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\n\n\nconst routes: Routes =  [\n                          {path: 'login', component: LoginComponent},\n                          {\n                            canActivate: [AuthGuard],\n                            path: '',\n                            component: HomeComponent\n                          }\n                        ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<router-outlet></router-outlet>\n","import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthGuard } from './modules/login/auth-guard.service';\nimport { AuthTokenInterceptor } from './modules/utility/auth-token.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport { HomeComponent } from './home/home.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginModule } from './modules/login/login.module';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { NgModule } from '@angular/core';\nimport { UtilityModule  } from './modules/utility/utility.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CdkTableModule,\n    CdkTreeModule,\n    LoginModule,\n    MatListModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatToolbarModule,\n    UtilityModule\n  ],\n  providers: [AuthGuard,\n              {\n                provide: HTTP_INTERCEPTORS,\n                useClass: AuthTokenInterceptor ,\n                multi: true\n              }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthenticationService } from '../modules/utility/services/authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { CallTreeEntryService } from '../modules/utility/services/call-tree-entry.service';\nimport { OperationResult } from 'src/app/classes/OperationResult';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  showCallTreeFunction = false;\n  showCallTreeEntryFunction = false;\n  showManualFunction = false;\n  constructor(private authenticationService: AuthenticationService,\n              private callTreeEntryService: CallTreeEntryService) {\n    /*\n    this.callTreeEntryService.getAllCallTreeEntry().subscribe((res: OperationResult) => {\n      console.log(res.success);\n    });\n    */\n  }\n\n  ngOnInit(): void {\n  }\n  logout() {\n    this.authenticationService.logout();\n    location.href = '../admin';\n  }\n  toggleCallTreeFunction(){\n    this.showCallTreeFunction = !this.showCallTreeFunction;\n    this.showCallTreeEntryFunction = false;\n    this.showManualFunction = false;\n  }\n  toggleCallTreeEntryFunction() {\n    this.showCallTreeFunction = false;\n    this.showCallTreeEntryFunction = !this.showCallTreeEntryFunction;\n    this.showManualFunction = false;\n  }\n  toggleManualFunction() {\n    this.showCallTreeFunction = false;\n    this.showCallTreeEntryFunction = false;\n    this.showManualFunction = !this.showManualFunction;\n  }\n}\n","<mat-toolbar class=\"header\">\n  <span>Call tree Admin. Page</span>\n</mat-toolbar>\n<mat-sidenav-container class=\"container\">\n  <mat-sidenav #sidenav mode=\"side\" opened class=\"sidenav\">\n    <mat-nav-list>\n      <a mat-list-item routerLink='' (click)=\"toggleCallTreeEntryFunction()\">Call Tree Entry Management</a>\n      <mat-list *ngIf=\"(showCallTreeEntryFunction)\" style=\"margin-left:30px;\">\n            <mat-list-item>Add A Call Tree Entry</mat-list-item>\n            <mat-list-item>Edit A Call Tree Entry</mat-list-item>\n      </mat-list>\n      <a mat-list-item routerLink='' (click)=\"toggleCallTreeFunction()\">Call Tree Management</a>\n      <mat-list *ngIf=\"(showCallTreeFunction)\" style=\"margin-left:30px;\">\n        <mat-list-item>Add A Call Tree</mat-list-item>\n        <mat-list-item>Edit A Call Tree</mat-list-item>\n      </mat-list>\n\n      <a mat-list-item routerLink='' (click)=\"toggleManualFunction()\">Operation Manual Management</a>\n      <mat-list *ngIf=\"(showManualFunction)\" style=\"margin-left:30px;\">\n        <mat-list-item>Add An Operation Manual</mat-list-item>\n        <mat-list-item>Edit An Operation Manual</mat-list-item>\n      </mat-list>\n      <a mat-list-item routerLink=\"\" (click)=\"logout()\">Logout</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router} from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private cookieService: CookieService, private router: Router) {\r\n  }\r\n  canActivate() {\r\n    /*\r\n    const token = this.cookieService.get('accessToken');\r\n    console.log('token=', token);\r\n    console.log(token === '');\r\n    if (token === '') {\r\n      this.router.navigate(['/login/']);\r\n    } else {\r\n      console.log('all cookies=', this.cookieService.getAll());\r\n      return true;\r\n    }*/\r\n    const token = sessionStorage.getItem('accessToken');\r\n    console.log('token=', token);\r\n    if (sessionStorage.getItem('accessToken') == null) {\r\n      this.router.navigate(['/login/']);\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","export class LoginObj {\n  constructor( public userName: string, public password: string) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { LoginObj } from './login-obj';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../utility/services/authentication.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model = new LoginObj('user', 'password');\n  constructor(private authenticationService: AuthenticationService, private router: Router) { }\n\n  login(loginObj: LoginObj) {\n\n    this.authenticationService.login(loginObj.userName, loginObj.password)\n    .subscribe ((resultCode: number) => {\n                  console.log('resultCode=' + resultCode);\n                  switch (resultCode) {\n                    case 0 : this.router.navigate(['../']);\n                             break;\n                    case -2: alert('Invalid username or password');\n                             break;\n                    default:\n                            alert('Unknown Error.');\n                            break;\n                  }\n                },\n                (error: HttpErrorResponse) => {\n                  alert(error.message);\n                });\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"display:flex;align-items: center;justify-content: center;width:100%\">\n  <form #loginForm=\"ngForm\" (ngSubmit)=\"login(model)\">\n    <table border=\"0\">\n      <tr>\n        <td colspan=\"2\" style=\"text-align:center\">Call Tree Admin. Login page</td>\n      </tr>\n      <tr>\n        <td>Login Name:</td>\n        <td>\n            <input type=\"text\" class=\"form-control\" id=\"userName\" required\n            [(ngModel)]=\"model.userName\"\n            name=\"userName\" #userName=\"ngModel\">\n            <div [hidden]=\"userName.valid || userName.pristine\" style='color:red'>\n              Login Name is required\n            </div>\n        </td>\n      </tr>\n      <tr>\n        <td>Password:</td>\n        <td>\n          <input type=\"password\" name=\"password\" required  [(ngModel)]=\"model.password\" #password=\"ngModel\">\n          <div [hidden]=\"password.valid || password.pristine\" style='color:red'>\n              Password is required\n            </div>\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\" style=\"text-align:center\"><input type=\"submit\" value=\"login\"></td>\n      </tr>\n    </table>\n  </form>\n</div>\n<div>\n{{userName.valid}}\n</div>\n<div>\n  {{userName.pristine}}\n</div>\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from '../login/login.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [LoginComponent],\n  exports: [\n            LoginComponent\n           ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ]\n})\nexport class LoginModule { }\n","import { AuthenticationService } from './services/authentication.service';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    console.log('request.url=', request.url);\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authenticationService.token}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport {Location} from '@angular/common';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenResult } from '../../login/authen-result';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  public token: string;\r\n  constructor(private http: HttpClient,\r\n              private cookieService: CookieService,\r\n              private location: Location) {\r\n    this.token = null;\r\n  }\r\n\r\n  login(userName: string, password: string): Observable<any> {\r\n    let requestParams = new HttpParams();\r\n    const url = '../RestfulServices/AuthService/doLogin';\r\n\r\n    console.log(userName, (userName !== null));\r\n    if (userName !== null) {\r\n      requestParams = requestParams.set('userName', userName);\r\n    }\r\n    if (password !== null) {\r\n      requestParams = requestParams.set('password',  password);\r\n    }\r\n    return this.http.post(url, requestParams)\r\n            .pipe(\r\n                map(\r\n                  (authenResult: AuthenResult) => {\r\n                    if (authenResult.resultCode === 0) {\r\n                      this.token = authenResult.accessToken;\r\n                      sessionStorage.setItem('accessToken', authenResult.accessToken);\r\n                    }\r\n                    return  authenResult.resultCode;\r\n                  },\r\n                (error: HttpErrorResponse) => {\r\n                  return error;\r\n                }));\r\n  }\r\n  logout() {\r\n    sessionStorage.clear();\r\n  }\r\n}\r\n","import { CallTreeEntry } from 'src/app/classes/CallTreeEntry';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { OperationResult } from 'src/app/classes/OperationResult';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CallTreeEntryService {\r\n  url = '../RestfulServices/CallTreeEntry/';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addCallTreeEntry(callTreeEntry: CallTreeEntry): Observable<OperationResult> {\r\n    const serviceURL = this.url + 'addCallTreeEntry';\r\n    return this.http.post(serviceURL , callTreeEntry).pipe(map((res: OperationResult) => res));\r\n  }\r\n  getAllCallTreeEntry(): Observable<OperationResult> {\r\n    const serviceURL = this.url + 'getAllCallTreeEntry';\r\n    return this.http.get(serviceURL).pipe(map((res: OperationResult) => res));\r\n  }\r\n  updateCallTreeEntry(callTreeEntry: CallTreeEntry): Observable<boolean> {\r\n    const serviceURL = this.url + 'updateCallTreeEntry';\r\n    return this.http.post(serviceURL , callTreeEntry).pipe(map((res: boolean) => res));\r\n  }\r\n  enableCallTreeEntry(callTreeEntryId: number): Observable<boolean> {\r\n    const serviceURL = this.url + 'enableCallTreeEntry';\r\n    let requestParams = new HttpParams();\r\n    requestParams = requestParams.append('callTreeEntryId', callTreeEntryId.toString());\r\n    return this.http.post(serviceURL, requestParams).pipe(map((res: boolean) => res));\r\n  }\r\n  disableCallTreeEntry(callTreeEntryId: number): Observable<boolean> {\r\n    const serviceURL = this.url + 'disableCallTreeEntry';\r\n    let requestParams = new HttpParams();\r\n    requestParams = requestParams.append('callTreeEntryId', callTreeEntryId.toString());\r\n    return this.http.post(serviceURL, requestParams).pipe(map((res: boolean) => res));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ]\n})\nexport class UtilityModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}